local lib = require "modules.general"
local player = require "modules.player"

function init(self)
	msg.post(".", "acquire_input_focus")
	lib.zoneUrl = msg.url()

	go.property("speed", 0.1)
	self.speed = vmath.vector3(self.speed)

	-- Make the color same whit go
	go.property("tint", vmath.vector4())
	self.tint.w = 0.5

	go.property("move", 10)

	sprite.set_constant("#sprite", "tint", self.tint)

	-- Variables
	self.currentPos = go.get_position()
	self.playerPos = go.get_position(lib.hashed("/player"))

	self.startScale = go.get_scale()
	self.currentScale = self.startScale
end

function update(self, dt)
	-- Change pos to player
	self.playerPos = go.get_position(lib.hashed("/player"))
	self.playerPos.z = self.playerPos.z - 1

	self.currentPos = go.get_position()

	local distance = self.playerPos - self.currentPos

	self.currentPos = vmath.vector3(self.currentPos.x + (distance.x * dt * self.move), self.currentPos.y + (distance.y * dt * self.move), self.playerPos.z)

	go.set_position(self.currentPos)
end

function on_message(self, message_id, message, sender)
	if message_id == lib.hashed("trigger_response") then
		msg.post(lib.hashed("/player"), lib.hashed("trigger_response"), message)
	end
end

function on_input(self, action_id, action)
	-- Make bigger zone
	if action_id == lib.hashed("touch") and player.canZone then
		self.currentScale = self.currentScale + self.speed
		go.set_scale(self.currentScale)
		if action.released then
			self.currentScale = self.startScale
			go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, self.currentScale, go.EASING_LINEAR, 0.5)
		end
	end
end